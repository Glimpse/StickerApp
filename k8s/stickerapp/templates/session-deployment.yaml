apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: "{{.Release.Name}}-session"
spec:
  template:
    metadata:
      labels:
        component: session
{{ include "stickerapp.common.labels" . | indent 8 }}
    spec:
      containers:
      - name: "{{.Release.Name}}-session"
        image: "{{ template "registry.name" . }}stickerapp/session:v1"
        imagePullPolicy: "{{.Values.imagePullPolicy}}"
        env:
        - name: KAFKA_BROKER
          value: "{{ .Values.kafkaBroker }}"
        - name: KAFKA_TOPIC
          value: "{{ template "kafka.topic" . }}"
        - name: NODE_ENV
          value: production
{{ include "redis-env" . | indent 8 }}
        - name: STICKER_SERVICE_URL
          value: "http://{{.Release.Name}}-stickers"
        ports:
        - containerPort: 8080
      initContainers:
        # poll the sticker service for 13 minutes, complete when something is listening
      - name: sticker-service-poll
        image: alpine:3.6
        command: [ "sh", "-c",
                   "for i in $(seq 1 60); do nc -z -w3 {{printf "%s-stickers" .Release.Name}} 80 && exit 0 || sleep 10s; done; exit 1" ]
      imagePullSecrets:
      - name: "{{ template "registry.secret.name" . }}"
